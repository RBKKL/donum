/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DonationsStore,
  DonationsStoreInterface,
} from "../DonationsStore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NewDonation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recipients",
    outputs: [
      {
        internalType: "string",
        name: "nickname",
        type: "string",
      },
      {
        internalType: "string",
        name: "avatarURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nickname",
        type: "string",
      },
      {
        internalType: "string",
        name: "_avatarURI",
        type: "string",
      },
    ],
    name: "setRecipientInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610664806100206000396000f3fe6080604052600436106100345760003560e01c806335dd089314610039578063429c14d71461005b578063eb8203121461006e575b600080fd5b34801561004557600080fd5b506100596100543660046102f7565b6100a5565b005b61005961006936600461038c565b6100e4565b34801561007a57600080fd5b5061008e6100893660046103df565b610182565b60405161009c929190610447565b60405180910390f35b3360009081526020819052604090206100bf848683610514565b503360009081526020819052604090206001016100dd828483610514565b5050505050565b60405173ffffffffffffffffffffffffffffffffffffffff8416903480156108fc02916000818181858888f19350505050158015610126573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff167fa374875f5df088cfb750bbe8b4e25db8ce7a7199d782713c5aaec7068e4d7bc233344286866040516101759594939291906105d4565b60405180910390a2505050565b60006020819052908152604090208054819061019d9061048b565b80601f01602080910402602001604051908101604052809291908181526020018280546101c99061048b565b80156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b50505050509080600101805461022b9061048b565b80601f01602080910402602001604051908101604052809291908181526020018280546102579061048b565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b5050505050905082565b60008083601f8401126102c057600080fd5b50813567ffffffffffffffff8111156102d857600080fd5b6020830191508360208285010111156102f057600080fd5b9250929050565b6000806000806040858703121561030d57600080fd5b843567ffffffffffffffff8082111561032557600080fd5b610331888389016102ae565b9096509450602087013591508082111561034a57600080fd5b50610357878288016102ae565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461038757600080fd5b919050565b6000806000604084860312156103a157600080fd5b6103aa84610363565b9250602084013567ffffffffffffffff8111156103c657600080fd5b6103d2868287016102ae565b9497909650939450505050565b6000602082840312156103f157600080fd5b6103fa82610363565b9392505050565b6000815180845260005b818110156104275760208185018101518683018201520161040b565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061045a6040830185610401565b828103602084015261046c8185610401565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061049f57607f821691505b6020821081036104bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561050f57600081815260208120601f850160051c810160208610156104ec5750805b601f850160051c820191505b8181101561050b578281556001016104f8565b5050505b505050565b67ffffffffffffffff83111561052c5761052c610475565b6105408361053a835461048b565b836104c5565b6000601f841160018114610574576000851561055c5750838201355b600019600387901b1c1916600186901b1783556100dd565b600083815260209020601f19861690835b828110156105a55786850135825560209485019460019092019101610585565b50868210156105c25760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f1916010194935050505056fea2646970667358221220dc02d751d17ba24d3ac342ec404a4b8e0a06d4c15f63f625fb9c9db7dfe9b1d964736f6c63430008110033";

type DonationsStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationsStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationsStore__factory extends ContractFactory {
  constructor(...args: DonationsStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationsStore> {
    return super.deploy(overrides || {}) as Promise<DonationsStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationsStore {
    return super.attach(address) as DonationsStore;
  }
  override connect(signer: Signer): DonationsStore__factory {
    return super.connect(signer) as DonationsStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationsStoreInterface {
    return new utils.Interface(_abi) as DonationsStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationsStore {
    return new Contract(address, _abi, signerOrProvider) as DonationsStore;
  }
}
